


-- BUSCA EL ID DEL DEPORTE A TRAVES DE SU NOMBRE
-- FUE CREADO PARA OBTENER EL ID DEL DEPORTE ANTES DE INSERTAR

CREATE OR REPLACE FUNCTION obtenerIdDeporte (nombre VARCHAR(200)) RETURNS INTEGER AS 
$$ 
DECLARE
 resultado INTEGER;
BEGIN 

  SELECT SPORTID INTO  resultado
  FROM SPORT
  WHERE SPORTNAME=nombre;
  return(resultado);
  
END; 
$$
LANGUAGE 'plpgsql' STABLE;



-- INSERTA EL ID DEL USUARIO Y EL ID DEL DEPORTE 

CREATE OR REPLACE FUNCTION insertarDeporte(usuario INTEGER ,deporte INTEGER) RETURNS BOOLEAN AS $$
BEGIN
	 INSERT INTO EXERCISE (EXERCISEID,FK_PERSON,FK_SPORT) VALUES (nextval('EXERCISEID'),usuario,deporte);
	 
	 RETURN TRUE;
	 
END
$$
LANGUAGE 'plpgsql' VOLATILE; 


-- CARGA TODOS LOS DEPORTES DE UN USUARIO A TRAVES DEL ID DEL DEPORTE Y DEL PROPIO

CREATE OR REPLACE FUNCTION obtenerDeportesUsuario () RETURNS VARCHAR(200) AS 
$$ 
DECLARE
 resultado VARCHAR;
BEGIN 

  SELECT SPORTNAME INTO resultado
  FROM   EXERCISE,SPORT,PERSON
  WHERE  PERSONID = FK_PERSON AND 
		 FK_SPORT = SPORTID;
  return(resultado);
  
END; 
$$
LANGUAGE 'plpgsql' STABLE;

-- Elimina deportes registrados

CREATE OR REPLACE FUNCTION eliminarDeporte (usuario INTEGER ,deporte INTEGER) RETURNS BOOLEAN AS $$
BEGIN
	 INSERT INTO EXERCISE (EXERCISEID,FK_PERSON,FK_SPORT) VALUES (nextval('EXERCISEID'),usuario,deporte);
	 
	 RETURN TRUE;
	 
END
$$
LANGUAGE 'plpgsql' VOLATILE; 

-- INSERTA LOS DATOS PARA EL REGISTROS DE LAS ACTIVIDADES

CREATE OR REPLACE FUNCTION insertarActividad (horainicio TIME, horafinal TIME, fecha DATE, km NUMERIC, caloria NUMERIC, lugarinicio VARCHAR(200),lugarfinal VARCHAR(200) ) RETURNS BOOLEAN AS $$
BEGIN
	 INSERT INTO  ACTIVITY (ACTIVITYID,ACTIVITYSTARTTIME, ACTIVITYENDTIME,ACTIVITYDATE,ACTIVITYKM ,ACTIVITYCALOR,ACTIVITYSTARTSITE,ACTIVITYENDSITE) VALUES (nextval('ACTIVITYID'),
                    horainicio,horafinal,fecha,km,caloria,lugarinicio,lugarfinal) ;
	 
	 RETURN TRUE;
	 
END
$$
LANGUAGE 'plpgsql' VOLATILE; 

